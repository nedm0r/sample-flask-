apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-flask-app-deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      app: my-flask-app
  template:
    metadata:
      labels:
        app: my-flask-app
    spec:
      containers:
      - name: my-flask-app-container
        image: nedm0r/docker-flask-project:latest
        imagePullPolicy: Always  # Set the image pull policy to Always
        ports:
        - containerPort: 5000
        env:
            - name: MYSQL_PASSWORD
              value: password
            - name: MYSQL_USER
              value: root
            - name: MYSQL_HOST
              value: db
            - name: MYSQL_DATABASE
              value: flask_db
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mysql-deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mysql-app
  template:
    metadata:
      labels:
        app: mysql-app
    spec:
      containers:
        - name: mysql-container
          image: nedm0r/flask-database:latest
          imagePullPolicy: Always  # Set the image pull policy to Always
          ports:
            - containerPort: 3306
          env:
            - name: MYSQL_ROOT_PASSWORD
              value: password
---
apiVersion: v1
kind: Service
metadata:
  name: my-flask-app
spec:
  selector:
    app: my-flask-app
  ports:
    - protocol: TCP
      port: 5000
      targetPort: 5000
  type: LoadBalancer
---
apiVersion: v1
kind: Service
metadata:
  name: db
spec:
  selector:
    app: mysql-app
  ports:
    - protocol: TCP
      port: 3306
      targetPort: 3306
  type: ClusterIP
