# my-flask-app-deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-flask-app-deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      app: my-flask-app
  template:
    metadata:
      labels:
        app: my-flask-app
    spec:
      containers:
        - name: my-flask-app-container
          image: nedm0r/docker-flask-project:latest
          imagePullPolicy: Always
          ports:
            - containerPort: 5000
          Environment:
              MYSQL_ROOT_PASSWORD:  password  # Use this for root user's password
              MYSQL_USER:           another_user  # Optionally, if you need another user
              MYSQL_PASSWORD:       another_password  # Password for the other user
              MYSQL_HOST:           db
              MYSQL_DATABASE:       flask_db
---
# mysql-deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mysql-deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mysql-app
  template:
    metadata:
      labels:
        app: mysql-app
    spec:
      containers:
        - name: mysql-container
          image: nedm0r/flask-database:latest
          imagePullPolicy: Always
          ports:
            - containerPort: 3306
          Environment:
              MYSQL_ROOT_PASSWORD:  password  # Use this for root user's password
              MYSQL_USER:           another_user  # Optionally, if you need another user
              MYSQL_PASSWORD:       another_password  # Password for the other user
              MYSQL_HOST:           db
              MYSQL_DATABASE:       flask_db
---
# my-flask-app-service.yaml
apiVersion: v1
kind: Service
metadata:
  name: my-flask-app
spec:
  selector:
    app: my-flask-app
  ports:
    - protocol: TCP
      port: 5000
      targetPort: 5000
  type: LoadBalancer
---
# db-service.yaml
apiVersion: v1
kind: Service
metadata:
  name: db
spec:
  selector:
    app: mysql-app
  ports:
    - protocol: TCP
      port: 3306
      targetPort: 3306
  type: ClusterIP
